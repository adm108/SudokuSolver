from django.db import models
from django.conf import settings
from django.core.validators import MaxValueValidator, MinValueValidator


class SudokuBeforeSolve(models.Model):
    created_at = models.DateTimeField(auto_now_add=True)
    slug = models.SlugField(max_length=255, unique=True)
    author = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)

    a1b1 = models.PositiveIntegerField(
        null=True, validators=[MinValueValidator(1), MaxValueValidator(9)]
    )
    # a2b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    class Meta:
        verbose_name_plural = "Sudoku before solve"


class SolvedSudoku(models.Model):
    sudoku_before_solve = models.OneToOneField(
        SudokuBeforeSolve, on_delete=models.CASCADE, default=None
    )

    a1b1 = models.PositiveIntegerField(
        null=True, validators=[MinValueValidator(1), MaxValueValidator(9)]
    )
    # a2b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b1 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b2 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b3 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b4 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b5 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b6 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b7 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b8 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    # a1b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a2b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a3b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a4b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a5b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a6b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a7b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a8b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])
    # a9b9 = models.PositiveIntegerField(null=True, validators=[MinValueValidator(1), MaxValueValidator(9)])

    class Meta:
        verbose_name_plural = "Solved sudoku"
